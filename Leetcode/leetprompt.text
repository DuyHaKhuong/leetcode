The goal is generate the Python file for Leetcode problems given URI from users. The Python file has description, starter code (similar to what Leetcode gives user), and tests from examples in description. Finally open it in IDE.

Task:
Given the following raw problem description (extracted from LeetCode, possibly poorly formatted):

{raw_description}
{templte code}
{tests}

If the file exists, ask user again if they want to overwrite it or open it in IDE. Please generate a single Python file with the following structure:

1. A clean top-level docstring:
   - Title, URL, Difficulty, Fetched date
   - A well-formatted description in paragraphs
   - Clearly formatted "Examples" section:
     * Each example should show Input, Output, and Explanation
   - A clearly formatted "Constraints" section as a bulleted list

2. A code template:
   - class Solution with the correct method signature inferred from the problem, similar to the one in URI
   - The method body should contain only `pass`

3. Add tests
these tests are from the description in the URI, add these tests to the end. 
All tests are under the same def test_examples(self) functions, one line for one test (make it early to commend it out)
def test_examples(self):
  sol = Solution()
  self.assertEqual(sol.<function>(<test_input>), <expeted_value)

4. Open the new file in IDE
- Then read {URI} to reformat the text in the newly created file and add unittests (from the examples in the description) at the end of the file.

The IDE is intellij
DO NOT ADD ANY HINTS, NO MORE TEXT OTHER THAN THE DESCRIPTION
